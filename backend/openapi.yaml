openapi: 3.0.3
info:
  title: User Management API
  version: 1.0.0
  description: |
    API documentation for the User Management system, including authentication, user CRUD, RBAC, audit logging, and compliance endpoints.
    
    **API Versioning:**
    All endpoints are now served under `/api/v1` for backward compatibility and safe evolution.
servers:
  - url: http://localhost:3001/api/v1
paths:
  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: JWT token returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials
        '429':
          description: Too many login attempts
  /register:
    post:
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '201':
          description: Registration successful
        '400':
          description: Bad request or duplicate email
  /users:
    get:
      summary: List users (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '403':
          description: Forbidden
    post:
      summary: Create user (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created
        '400':
          description: Bad request
        '403':
          description: Forbidden
  /users/{id}:
    put:
      summary: Update user (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User updated
        '400':
          description: Bad request
        '404':
          description: Not found
        '403':
          description: Forbidden
  /roles:
    get:
      summary: List roles (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of roles
    post:
      summary: Create role (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreate'
      responses:
        '201':
          description: Role created
  /roles/{id}:
    put:
      summary: Update role (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdate'
      responses:
        '200':
          description: Role updated
        '404':
          description: Not found
    delete:
      summary: Delete role (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Role deleted
        '404':
          description: Not found
  /permissions:
    get:
      summary: List permissions (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of permissions
    post:
      summary: Create permission (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionCreate'
      responses:
        '201':
          description: Permission created
  /permissions/{id}:
    put:
      summary: Update permission (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionUpdate'
      responses:
        '200':
          description: Permission updated
        '404':
          description: Not found
    delete:
      summary: Delete permission (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Permission deleted
        '404':
          description: Not found
  /audit-log:
    get:
      summary: View audit logs (admin only, filter/paginate/export)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: action
          schema:
            type: string
        - in: query
          name: user
          schema:
            type: string
        - in: query
          name: from
          schema:
            type: string
            format: date-time
        - in: query
          name: to
          schema:
            type: string
            format: date-time
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: exportFormat
          schema:
            type: string
            enum: [csv, json]
      responses:
        '200':
          description: Paginated/filterable audit logs or export file
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLog'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      pageSize:
                        type: integer
                      total:
                        type: integer
            text/csv:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
        '403':
          description: Forbidden
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        role:
          type: string
    UserCreate:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        role:
          type: string
    UserUpdate:
      type: object
      properties:
        email:
          type: string
        role:
          type: string
    RoleCreate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    RoleUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    PermissionCreate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    PermissionUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    AuditLog:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        action:
          type: string
        old_role:
          type: string
        new_role:
          type: string
        changed_by:
          type: string
        timestamp:
          type: string
          format: date-time
        metadata:
          type: object
